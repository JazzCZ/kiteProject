<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="kite_project" resourceRoot="" soapui-version="4.6.4" abortOnError="false" runType="SEQUENTIAL" id="765d5e8a-a909-42ce-bb60-1a23c62b0ed7" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://52.35.69.0:8082" type="rest" id="3f48c4ef-50e8-4bbe-a67a-1d1e34f19306" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://52.35.69.0:8082</con:endpoint></con:endpoints><con:resource name="Validate" path="/registration/validate" id="b689d51c-812d-43f5-a988-3cad961c237c"><con:settings/><con:parameters/><con:method name="Validate" method="POST" id="55e84dce-6cca-4547-88f8-9108ad53ea0c"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>502</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>500 400</con:status><con:params/><con:element xmlns:val="http://52.35.69.0/registration/validate">val:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:val="http://52.35.69.0/registration/validate">val:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request_Validate" mediaType="application/json" postQueryString="false" id="c05ee811-211b-4669-b030-5ed4c6efd0a5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
 "code" : "",
"phoneNumber" : "+919956892348",
"isAmity" : true
}</con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="confirm" path="/registration/confirm" id="f5d8b038-bd4d-4f05-9d12-82bca5645eec"><con:settings/><con:parameters/><con:method name="Method 1" method="POST" id="a1bd39e1-755a-483c-8f79-64708ac455b2"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>502</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:con1="http://52.35.69.0/registration/confirm">con1:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="http://52.35.69.0/registration/confirm">con1:Response</con:element></con:representation><con:request name="Request_confirm" mediaType="application/json" postQueryString="false" id="6fb274a5-446d-49be-acc0-bd024c8909c8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ 
	"code" : "9531",
    "phoneNumber" : "+919989675458"
}</con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="complete" path="/registration/complete" id="3d499073-da01-4b76-9f19-d3ff966974f4"><con:settings/><con:parameters><con:parameter><con:name>data</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="2f34abca-c8ac-41e6-b65f-37f2d77625c0"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/form-data</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>502</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>text/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>form-data</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>text/form-data</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/form-data; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:com="http://52.35.69.0/registration/complete">com:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/atom+xml</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:request name="Request_complete" mediaType="multipart/form-data" postQueryString="false" id="0086743b-3dfc-4788-863b-9ca544736aae"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"code":"9531","isAmity":true,"password":"pppassworD1#","phoneNumber":"+919989675458","user": {"dateOfBirth":"1981-08-10","firstName":"test1","lastName":"test", "email":"dev@gmail.com"}}</con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>data</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="login" path="/login" id="bbb01f2b-2bf5-4003-a70c-7d4e42a1247c"><con:settings/><con:parameters/><con:method name="Method 1" method="POST" id="cbae41d8-79e9-4974-907d-a412dd60798a"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:log="http://52.35.69.0/login">log:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:log="http://52.35.69.0/login">log:Fault</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="4e880ef0-d663-4fc5-bbe3-b97da201053e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="TS_SingUp" id="46df260f-66e4-4db9-a3a2-ba446321906e"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_SingUp" searchProperties="true" id="f7c4f628-5177-4b19-bdd8-765c08b58188" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="01_IncreaseTel" id="3e844e35-05df-4354-be23-aa6e2ce05a0a"><con:settings/><con:config><script>//increase last four number i telephone

def lastFour =Long.parseLong( testRunner.testCase.getPropertyValue("Phone"));
lastFour++
testRunner.testCase.setPropertyValue("Phone", lastFour.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="02_Validate" id="ff42414e-8507-444c-b0aa-9f5d705dbad9"><con:settings/><con:config service="http://52.35.69.0:8082" methodName="Validate" resourcePath="/registration/validate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="02_Validate" mediaType="application/json" postQueryString="false" id="e7c5a980-b599-445b-b321-92126770075e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
 "code" : "",
"phoneNumber" : "+${#TestCase#Phone}",
"isAmity" : true
}</con:request><con:originalUri>http://52.35.69.0/registration/validate</con:originalUri><con:assertion type="Simple Contains" name="ContainsStatus0" id="0bb6d524-85b9-4c5e-a9bf-8ced5f44bcfb"><con:configuration><token>"status":0</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsNoError" id="c76f1ffc-d541-4790-ac10-bfc4ee8b20e4"><con:configuration><token>"errorList":null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript" id="31439710-aa8c-46e2-8cd3-d0c69be919cb"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="03_Get_OTP" id="006a9ef9-e524-4b7a-8253-676230eff315"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#DBDriver}</con:driver><con:connectionString>${#Project#DBConnectionString}</con:connectionString><con:query>select * from tbl_otp where objectid='+${#TestCase#Phone}'</con:query><con:assertion type="Simple Contains" name="ContainsActive" id="8fdeba34-a669-42e0-bf41-71086cbc9b5e"><con:configuration><token> &lt;TBL_OTP.STATUS>ACTIVE&lt;/TBL_OTP.STATUS></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="1edf5d08-d5aa-4f38-a068-b10cfbd9cfd1" name="ReportScript"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="04_SetOTP" id="00f7a8f3-d598-47c6-996e-c799ea23d1cd"><con:settings/><con:config><script>String jdbcXml
Integer r = 1;
def OTPcode 

jdbcXml = context.expand('${03_Get_OTP#ResponseAsXml}' )
def root = new XmlSlurper().parseText(jdbcXml)


root.ResultSet.Row.each{ row ->
OTPcode = row["TBL_OTP.CODE"]
r++
}

testRunner.testCase.setPropertyValue("OTP", OTPcode.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="05_Confirm" id="f3e733e2-1a99-4307-8fc2-604947612913"><con:settings/><con:config service="http://52.35.69.0:8082" methodName="Method 1" resourcePath="/registration/confirm" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="05_Confirm" mediaType="application/json" postQueryString="false" id="c9c7f61c-9439-4fb7-84ba-c1937332322d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ 
	"code" : "${#TestCase#OTP}",
    "phoneNumber" : "+${#TestCase#Phone}"
}

</con:request><con:assertion type="Simple Contains" name="ContainsStatus0" id="34028d59-bd6a-41b0-8154-57cccbdae1db"><con:configuration><token>"status":0</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsNoError" id="5c1d31b1-9cd8-4d55-a7b2-fcbcbd24d957"><con:configuration><token>"errorList":null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript" id="a15d4a35-dc9d-40a3-bef2-9f178de2d26d"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="06_Complete" id="b43a3452-3ebc-4d94-a8b8-f09a8d644998"><con:settings/><con:config service="http://52.35.69.0:8082" resourcePath="/registration/complete" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="06_Complete" mediaType="multipart/form-data" postQueryString="true" id="ab414455-64d2-40e7-a27f-bb05f7dfbaa2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Simple Contains" name="ContainsStatus0" id="223c3fa6-9951-491e-b106-91c51a4c8d2d"><con:configuration><token>"status":0</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains NoError" id="c3f77491-b835-4494-9dd1-64f119df8b20"><con:configuration><token>"errorList":null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript" id="b4823101-3248-4d4d-870b-2e32d59af9fc"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="data" value="{ &quot;code&quot;:&quot;${#TestCase#OTP}&quot;, &quot;isAmity&quot;:true, &quot;password&quot;:&quot;${#TestCase#Password}&quot;, &quot;phoneNumber&quot;:&quot;+${#TestCase#Phone}&quot;, &quot;user&quot;: {  &quot;dateOfBirth&quot;:&quot;${#TestCase#Birth}&quot;,  &quot;firstName&quot;:&quot;${#TestCase#FirstName}&quot;,  &quot;lastName&quot;:&quot;${#TestCase#LastName}&quot;,  &quot;email&quot;:&quot;${#TestCase#eMail}&quot;  } }" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="07_CheckStatusActive" id="2c6c202e-9bea-49ad-a2f2-828810f952c1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#DBDriver}</con:driver><con:connectionString>${#Project#DBConnectionString}</con:connectionString><con:query>select * from tbl_otp where objectid='+${#TestCase#Phone}'</con:query><con:assertion type="Simple Contains" name="ContainsVerified" id="b7bd7a19-a85b-401b-84b1-fb91f3dd75d1"><con:configuration><token> &lt;TBL_OTP.STATUS>VERIFIED&lt;/TBL_OTP.STATUS></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="77d92a7e-b8c0-4a0b-a5f6-f15926d22787" name="ReportScript"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="08_CheckDetails" id="aee2e884-b636-41ab-aa19-9afa25171cf4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#DBDriver}</con:driver><con:connectionString>${#Project#DBConnectionString}</con:connectionString><con:query>select * from tbl_mstr_usr where mobileno='+${#TestCase#Phone}'</con:query><con:assertion type="GroovyScriptAssertion" name="DateOfBirth" id="76a1a732-b171-4234-a291-aed9b2f329ec"><con:configuration><scriptText>String jdbcXml
Integer r = 1;
def BirthDate

jdbcXml = context.expand('${08_CheckDetails#ResponseAsXml}' )
def root = new XmlSlurper().parseText(jdbcXml)

root.ResultSet.Row.each{ row ->
BirthDate = row["TBL_MSTR_USR.DATEOFBIRTH"]
r++
}

if(BirthDate.equals(context.expand('${#TestCase#Birth}')) )
	{	assert true; }
else
	{ assert false }</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="MobileNo" id="76a1a732-b171-4234-a291-aed9b2f329ec"><con:configuration><scriptText>String jdbcXml
Integer r = 1;
def MobileNo

jdbcXml = context.expand('${08_CheckDetails#ResponseAsXml}' )
def root = new XmlSlurper().parseText(jdbcXml)

root.ResultSet.Row.each{ row ->
MobileNo = row["TBL_MSTR_USR.MOBILENO"]
r++
}

if( MobileNo.equals(context.expand('+${#TestCase#Phone}')))
	{	assert true; }
else 
	{ assert false }</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="eMail" id="76a1a732-b171-4234-a291-aed9b2f329ec"><con:configuration><scriptText>String jdbcXml
Integer r = 1;
def eMail

jdbcXml = context.expand('${08_CheckDetails#ResponseAsXml}' )
def root = new XmlSlurper().parseText(jdbcXml)

root.ResultSet.Row.each{ row ->
eMail = row["TBL_MSTR_USR.USEREMAIL"]
r++
}

if( eMail.equals(context.expand('${#TestCase#eMail}')))
	{	assert true; }
else 
	{ assert false }</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="FirstName" id="76a1a732-b171-4234-a291-aed9b2f329ec"><con:configuration><scriptText>String jdbcXml
Integer r = 1;
def FirstName

jdbcXml = context.expand('${08_CheckDetails#ResponseAsXml}' )
def root = new XmlSlurper().parseText(jdbcXml)

root.ResultSet.Row.each{ row ->
FirstName = row["TBL_MSTR_USR.FIRSTNAME"]
r++
}

if(FirstName.equals(context.expand('${#TestCase#Firstname}')) )
	{	assert true; 	}
else 
	{ assert false }</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="LastName" id="76a1a732-b171-4234-a291-aed9b2f329ec"><con:configuration><scriptText>String jdbcXml
Integer r = 1;
def LastName

jdbcXml = context.expand('${08_CheckDetails#ResponseAsXml}' )
def root = new XmlSlurper().parseText(jdbcXml)

root.ResultSet.Row.each{ row ->
LastName = row["TBL_MSTR_USR.LASTNAME"]
r++
}

log.info LastName

if(LastName.equals(context.expand('${#TestCase#LastName}')))
	{	assert true; }
else
	{ assert false }</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9a1d2e78-242a-4f5f-b67f-bc6e1b75234e" name="ReportScript"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="02.1_Validate_AreadyRegistred" id="832c4c0e-a210-4332-b622-998ae652d36c"><con:settings/><con:config service="http://52.35.69.0:8082" methodName="Validate" resourcePath="/registration/validate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="02.1_Validate_AreadyRegistred" mediaType="application/json" postQueryString="false" id="e7c5a980-b599-445b-b321-92126770075e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
 "code" : "",
"phoneNumber" : "+${#TestCase#Phone}",
"isAmity" : true
}</con:request><con:originalUri>http://52.35.69.0/registration/validate</con:originalUri><con:assertion type="Simple Contains" name="Contains400" id="665e55bd-bd7d-49a0-ae5f-bbe66446fba7"><con:configuration><token>"status":400</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsErrorMessagePart1" id="f97fd295-3dc9-4b8f-9dff-fa6a2b6b15ba"><con:configuration><token>"errorList":[{"errorCode":400,"errorMessage":"Phone number</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsErrorMessagePart2" id="30158134-e790-4a7d-a683-2679cfd8c3c7"><con:configuration><token>already registered"}]}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript" id="c565a8aa-33d2-4a29-b254-934dda805ffd"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="05.1_Confirm_InvalidIDCode" id="cebfeafc-656b-4e10-9688-7aa629b97a4c"><con:settings/><con:config service="http://52.35.69.0:8082" methodName="Method 1" resourcePath="/registration/confirm" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="05.1_Confirm_InvalidIDCode" mediaType="application/json" postQueryString="false" id="c9c7f61c-9439-4fb7-84ba-c1937332322d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ 
	"code" : "${#TestCase#OTP}",
    "phoneNumber" : "+${#TestCase#Phone}"
}

</con:request><con:assertion type="Simple Contains" name="ContainsStatus400" id="34028d59-bd6a-41b0-8154-57cccbdae1db"><con:configuration><token>"status":400</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsErrorMessagePart1" id="5c1d31b1-9cd8-4d55-a7b2-fcbcbd24d957"><con:configuration><token>"errorMessage":"Otp with object id</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsErrorMessagePart2" id="5c1d31b1-9cd8-4d55-a7b2-fcbcbd24d957"><con:configuration><token>does not exists"}]}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript" id="7942eb1e-9eb0-41a6-8596-f35f2b12883a"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="06.1_Complete_Fail" id="2433f612-2abb-45d4-8540-d1eda3e1432d"><con:settings/><con:config service="http://52.35.69.0:8082" resourcePath="/registration/complete" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="06.1_Complete_Fail" mediaType="multipart/form-data" postQueryString="true" id="ab414455-64d2-40e7-a27f-bb05f7dfbaa2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Simple Contains" name="ContainsStatus400" id="223c3fa6-9951-491e-b106-91c51a4c8d2d"><con:configuration><token>"status":400</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsErrorMessagePart1" id="c3f77491-b835-4494-9dd1-64f119df8b20"><con:configuration><token>"errorMessage":"Otp with id</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsErrorMessagePart2" id="c3f77491-b835-4494-9dd1-64f119df8b20"><con:configuration><token>and code 1111 not verified"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript" id="06f29883-b4fe-4b36-aa74-863e4879e854"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="data" value="{ &quot;code&quot;:1111, &quot;isAmity&quot;:true, &quot;password&quot;:&quot;${#TestCase#password}&quot;, &quot;phoneNumber&quot;:&quot;+${#TestCase#Phone}&quot;, &quot;user&quot;: {  &quot;dateOfBirth&quot;:&quot;${#TestCase#Birth}&quot;,  &quot;firstName&quot;:&quot;${#TestCase#FirstName}&quot;,  &quot;lastName&quot;:&quot;${#TestCase#LastName}&quot;,  &quot;email&quot;:&quot;${#TestCase#eMail}&quot;  } }" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="09_LoginNewUser"><con:settings/><con:config service="http://52.35.69.0:8082" resourcePath="/login" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="09_LoginNewUser" mediaType="application/json" postQueryString="false" id="4e880ef0-d663-4fc5-bbe3-b97da201053e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"identifier":{
	"idType":"PHONE", "idValue":"+${#TestCase#Phone}"
},
"password":"${#TestCase#Password}"
}</con:request><con:assertion type="Simple Contains" name="ContainsStatus0"><con:configuration><token>"status":0</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsNoError"><con:configuration><token>"errorList":null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="SaveSessionID"><con:configuration><scriptText>String response = context.expand('${#ResponseAsXml}' )

response = response.split("&lt;sessionId>")[1];
response = response.split("&lt;/sessionId>")[0];

messageExchange.modelItem.testStep.testCase.setPropertyValue("SessionID", response);</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="09.1Check_Active"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#DBDriver}</con:driver><con:connectionString>${#Project#DBConnectionString}</con:connectionString><con:query>select * from tbl_session where id ='${#TestCase#SessionID}' </con:query><con:assertion type="Simple Contains" name="ContainsActive"><con:configuration><token>&lt;TBL_SESSION.STATUS>ACTIVE&lt;/TBL_SESSION.STATUS></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>Phone</con:name><con:value>919956892385</con:value></con:property><con:property><con:name>OTP</con:name><con:value>5998</con:value></con:property><con:property><con:name>Password</con:name><con:value>pppassworD1#</con:value></con:property><con:property><con:name>Birth</con:name><con:value>1981-08-07</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>test1</con:value></con:property><con:property><con:name>LastName</con:name><con:value>test</con:value></con:property><con:property><con:name>eMail</con:name><con:value>dev@gmail.com</con:value></con:property><con:property><con:name>SessionID</con:name><con:value>8f952994-49f7-4660-8927-2434787c1df5</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_Login" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a9114def-7c9b-4f13-9994-93a86ff823cb"><con:settings/><con:testStep type="restrequest" name="01_Login" id="dcc5f5be-b8bb-486b-ba60-db2b550a2db7"><con:settings/><con:config service="http://52.35.69.0:8082" resourcePath="/login" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="01_Login" mediaType="application/json" postQueryString="false" id="5223885c-cf77-4181-9427-b74a53ecb2ad"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"identifier":{
	"idType":"PHONE", "idValue":"+919956892385"
},
"password":"pppassworD1#"
}</con:request><con:assertion type="Simple Contains" name="ContainsStatus0" id="27b2b963-3a09-4c5e-a595-859aa6edb3b6"><con:configuration><token>"status":0</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsNoError" id="b67c3235-4466-4225-85e3-0e55b18da342"><con:configuration><token>"errorList":null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript" id="2671e682-026b-42fb-a3c1-08c8f6b7fd39"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="SaveSessionID"><con:configuration><scriptText>String response = context.expand('${#ResponseAsXml}' )

response = response.split("&lt;sessionId>")[1];
response = response.split("&lt;/sessionId>")[0];

messageExchange.modelItem.testStep.testCase.setPropertyValue("SessionID", response);</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="01.1Check_Active"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#DBDriver}</con:driver><con:connectionString>${#Project#DBConnectionString}</con:connectionString><con:query>select * from tbl_session where id ='${#TestCase#SessionID}' </con:query><con:assertion type="Simple Contains" name="ContainsActive"><con:configuration><token>&lt;TBL_SESSION.STATUS>ACTIVE&lt;/TBL_SESSION.STATUS></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="02_WrongPass" id="0827c5a9-3a2f-4bac-9d1d-0ded56dccd97"><con:settings/><con:config service="http://52.35.69.0:8082" resourcePath="/login" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="02_WrongPass" mediaType="application/json" postQueryString="false" id="fa20772a-08f6-45df-8e07-1bb0d26f08b6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"identifier":{
	"idType":"PHONE", "idValue":"+919956892378"
},
"password":"ppp#"
}</con:request><con:assertion type="Simple Contains" name="ContainsStatus400" id="1faf0563-0357-4b26-8d18-0e49b931647e"><con:configuration><token>"status":400</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsInvalidCredential" id="ddd8a869-4dbe-4adf-88bf-f78d31467cba"><con:configuration><token>"errorMessage":"Invalid credentials"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript" id="ca29b27f-4c3e-4b32-8632-a92b7d2b23b1"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="03_BlankPass" id="2ecbeb20-4731-4927-94d7-fb9de2e77223"><con:settings/><con:config service="http://52.35.69.0:8082" resourcePath="/login" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="03_BlankPass" mediaType="application/json" postQueryString="false" id="ab04bf32-8a11-48f8-a972-48bffa96ba23"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"identifier":{
	"idType":"PHONE", "idValue":"+919956892378"
},
"password":""
}</con:request><con:assertion type="Simple Contains" name="ContainsStatus400" id="2bbd738e-bdbe-44fc-b66d-a8509e9b581d"><con:configuration><token>"status":400</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsInvalidCredential" id="d60f07a6-9587-4274-ae72-823baa99b1c2"><con:configuration><token>"errorMessage":"Invalid credentials"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript" id="13d2f598-f16e-41fc-9e12-4961569b6c7f"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="04_BlankPhone" id="397a08bd-c488-4b50-89ca-748694f31c3f"><con:settings/><con:config service="http://52.35.69.0:8082" resourcePath="/login" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="04_BlankPhone" mediaType="application/json" postQueryString="false" id="5b27f384-1ab5-4fdb-a2aa-997b3e291d81"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"identifier":{
	"idType":"PHONE", "idValue":""
},
"password":"pppassworD1#"
}</con:request><con:assertion type="Simple Contains" name="ContainsStatus400" id="ae6fb819-8b1b-46ef-85d7-a79748e4520e"><con:configuration><token>"status":400</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsInvalidPhoneNumber" id="93df4a72-6a3f-4ee3-a05c-de93827efd0e"><con:configuration><token>"errorMessage":"Invalid Phone number "</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript" id="e6ab75e2-1b93-435b-a942-37e3ec1f323b"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="05_InvalidPhone" id="bcd68a4c-4ea5-440d-bd51-9b76533c23b0"><con:settings/><con:config service="http://52.35.69.0:8082" resourcePath="/login" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="05_InvalidPhone" mediaType="application/json" postQueryString="false" id="81b65c5c-5616-4cad-b531-3ba9c4c86aaf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"identifier":{
	"idType":"PHONE", "idValue":"+910000000000"
},
"password":"pppassworD1#"
}</con:request><con:assertion type="Simple Contains" name="ContainsStatus400" id="58ae07f8-f20e-43c5-bafa-00bd8940d746"><con:configuration><token>"status":400</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="ContainsInvalidPhoneNumber" id="c2246b3d-ac7e-4305-a5cc-1a2b05b20cb5"><con:configuration><token>"errorMessage":"Invalid Phone number +910000000000"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="ReportScript" id="e3631748-4b54-4a85-85a5-cf58a85c8ce9"><con:configuration><scriptText>def fileName = messageExchange.modelItem.testStep.name
def folderName = messageExchange.modelItem.testCase.name
def soapReq = context.expand('${'+fileName+'#Request}')
def soapRes = context.expand('${'+fileName+'#ResponseAsXml}')
def filePath = context.expand ('${projectDir}') + "/Reports/"+folderName

def file = new File(filePath)
file.mkdirs()

PrintWriter writer = new PrintWriter(filePath+"/"+fileName+".txt", "UTF-8");


writer.println("----------Assertions----------\n");
messageExchange.modelItem.getAssertionList().each {
	if ("$it.label" != "ReportScript")
    writer.println( "$it.label - $it.status" )
}
writer.println("\n----------Request----------\n");
writer.println(soapReq);
writer.println("\n----------Response----------\n");
writer.println(soapRes);
writer.close();</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>SessionID</con:name><con:value>f23aa0fb-1aac-4c07-aaf3-68dd8d5fa972</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:properties><con:property><con:name>Endpoint</con:name><con:value>http://52.35.69.0:8082</con:value></con:property><con:property><con:name>DBDriver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>DBConnectionString</con:name><con:value>jdbc:postgresql://52.35.69.0:5432/kiteDBTest?user=postgres&amp;password=postgres</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/><con:authRepository/></con:soapui-project>